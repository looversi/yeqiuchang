#设置日志级别的开关，不会打印输出DEBUG级别的日志
log4j.rootLogger = INFO,console,allFile,errorFile

#输出到控制台
log4j.appender.console = org.apache.log4j.ConsoleAppender
#输出日志的级别是DEBUG,也是默认类型
log4j.appender.console.Threshold = DEBUG
#是否立刻输出日志
log4j.appender.console.ImmediateFlush = true
#系统的标准输出设备上输出日志
log4j.appender.console.Target = system.out
#日志输出格式
log4j.appender.console.layout = org.apache.log4j.PatternLayout
#设置输出日志的具体格式,%-5p 负号表示左对齐
log4j.appender.console.layout.ConversionPattern = [%-5p] %d{yyyy MM dd HH:mm}(%r) --> [%t] %l: %m %x %n


#输出到文件；logs/log.log4j  记录debug级别及以上的日志信息
log4j.appender.allFile = org.apache.log4j.FileAppender
#输出的文件位置
log4j.appender.allFile.File = D:/logs/log.log4j
#日志加在文件后面：true,日志覆盖指定内容：false
log4j.appender.allFile.Append = true
#记录DEBUG级别及以上的日志记录
log4j.appender.allFile.Threshold =DEBUG
#立刻输出日志信息
log4j.appender.allFile.ImmediateFlush = true
#设置日志格式
log4j.appender.allFile.layout = org.apache.log4j.PatternLayout
log4j.appender.allFile.layout.ConversionPattern = [%-5p] %d{yyyy MM dd HH:mm}(%r) --> [%t] %l: %m %x %n

#输出到文件：logs/error.log4j  只记录error级别的日志信息
log4j.appender.errorFile = org.apache.log4j.FileAppender
#输出日志文件的位置
log4j.appender.errorFile.File = D:/logs/error.log4j
#true:日志信息加在文件后面  	false:日志信息覆盖指定的内容
log4j.appender.errorFile.Append = true
#日志记录ERROR及以上级别的信息
log4j.appender.errorFile.Threshold = ERROR
#立刻输出日志信息
log4j.appender.errorFile.ImmediateFlush = true
#设置日志输出格式
log4j.appender.errorFile.layout = org.apache.log4j.PatternLayout
log4j.appender.errorFile.layout.ConversionPattern = [%-5p] %d{yyyy MM dd HH:mm}(%r) --> [%t] %l: %m %x %n
